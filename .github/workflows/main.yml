name: Build MongoDB for Raspberry Pi

on:
  workflow_dispatch:

permissions:
  contents: write # Required to create/update releases and upload assets

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [pi5, pizero]
        include:
          - target: pi5
            gcc_prefix: aarch64-linux-gnu
          - target: pizero
            gcc_prefix: arm-linux-gnueabihf

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract MONGO_VERSION
        id: get_version
        # Read from build-only.sh now
        run: echo "MONGO_VERSION=$(grep '^MONGO_VERSION=' build-only.sh | cut -d'"' -f2)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        id: docker_build
        run: |
          docker build -t mongo-builder:${{ github.sha }} -f Dockerfile.mongo-builder .
          echo "image_tag=mongo-builder:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build MongoDB for ${{ matrix.target }} in Docker
        run: |
          mkdir -p ${{ github.workspace }}/build-output # Ensure output dir exists on runner
          docker run --rm \
            -v ${{ github.workspace }}/build-output:/workspace/build-output:rw \
            -e GITHUB_ACTIONS=true \
            ${{ steps.docker_build.outputs.image_tag }} \
            bash -c "set -euo pipefail && \
                     echo '--- Running prepare-env.sh ---' && \
                     /app/prepare-env.sh && \
                     echo '--- Running build-only.sh for ${{ matrix.target }} ---' && \
                     /app/build-only.sh ${{ matrix.target }}"
        timeout-minutes: 180

      - name: Set artifact details
        id: artifact_details
        run: |
          ARTIFACT_NAME="mongodb.${{ matrix.target }}.${{ steps.get_version.outputs.MONGO_VERSION }}.tar.gz"
          # build-only.sh places output in BUILD_DIR/$GCC_PREFIX
          # BUILD_DIR in docker is /workspace/build-output
          ARTIFACT_PATH="${{ github.workspace }}/build-output/${{ matrix.gcc_prefix }}/$ARTIFACT_NAME"
          echo "Checking for artifact at: $ARTIFACT_PATH"
          if [[ ! -f "$ARTIFACT_PATH" ]]; then
            echo "::error::Artifact not found at expected path: $ARTIFACT_PATH"
            # List the expected parent directory content
            ls -lha "${{ github.workspace }}/build-output/${{ matrix.gcc_prefix }}/"
            exit 1
          fi
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
          echo "ARTIFACT_PATH=$ARTIFACT_PATH" >> $GITHUB_OUTPUT

      - name: Upload ${{ steps.artifact_details.outputs.ARTIFACT_NAME }} to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.MONGO_VERSION }}
          files: ${{ steps.artifact_details.outputs.ARTIFACT_PATH }} 