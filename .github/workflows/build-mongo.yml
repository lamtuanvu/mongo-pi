name: Build MongoDB for Raspberry Pi

on:
  workflow_dispatch:

permissions:
  contents: write # Required to create/update releases and upload assets

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow other builds to continue if one fails
      matrix:
        target: [pi5, pizero]
        include:
          - target: pi5
            gcc_prefix: aarch64-linux-gnu
          - target: pizero
            gcc_prefix: arm-linux-gnueabihf

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract MONGO_VERSION
        id: get_version
        run: echo "MONGO_VERSION=$(grep '^MONGO_VERSION=' build-mongo.sh | cut -d'"' -f2)" >> $GITHUB_OUTPUT

      - name: Build MongoDB for ${{ matrix.target }}
        run: ./build-mongo.sh ${{ matrix.target }}
        # Increase shell timeout if needed (e.g., 3 hours)
        timeout-minutes: 180

      - name: Set artifact details
        id: artifact_details
        run: |
          ARTIFACT_NAME="mongodb.${{ matrix.target }}.${{ steps.get_version.outputs.MONGO_VERSION }}.tar.gz"
          ARTIFACT_PATH="$HOME/mongo-build/mongo/${{ matrix.gcc_prefix }}/$ARTIFACT_NAME"
          echo "Checking for artifact at: $ARTIFACT_PATH"
          if [[ ! -f "$ARTIFACT_PATH" ]]; then
            echo "::error::Artifact not found at expected path: $ARTIFACT_PATH"
            ls -lha "$HOME/mongo-build/mongo/${{ matrix.gcc_prefix }}/"
            exit 1
          fi
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
          echo "ARTIFACT_PATH=$ARTIFACT_PATH" >> $GITHUB_OUTPUT

      - name: Upload ${{ steps.artifact_details.outputs.ARTIFACT_NAME }} to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.MONGO_VERSION }}
          files: ${{ steps.artifact_details.outputs.ARTIFACT_PATH }}
          # Creates release if tag_name doesn't exist, otherwise adds assets to existing release. 